pipeline {
    agent { 
		docker { 
			image 'maven:3.3.3' 
			args '--network training-playground'
		}
	}
    stages {
        stage('build') {
            steps {
	    configFileProvider(
        		[configFile(fileId: 'settings.xml', targetLocation: 'settings-copy.xml')]) {
       			 sh "mvn install \
			 	-s settings-copy.xml \
			 	-f '005 - Recording Test Results and Artifacts/02 - Java Unit Tests/' \
				org.sonarsource.scanner.maven:sonar-maven-plugin:3.6.0.1398:sonar  \
				-Dsonar.host.url='sonarqube:9000/' \
				-Dsonar.projectKey='project1' \
				-Dsonar.projectName='projectName1'"
   			 }
            }
        }
	stage('deploy'){
		steps {
			sh "mvn deploy:deploy-file \
				-s setting-copy.xml \
				-Durl='http://nexus:8081/repository/maven-releases/'
				-Dfile '005 - Recording Test Results and Artifacts/02 - Java Unit Tests/target/java-app-1.0.0.jar' \
				-DrepositoryId='maven-releases' \
				-Dpackaging=jar \
				-DgeneratePom=true \
				-DgeneratePom.description='by ms' \
				-DgroupId='training-playground' \
				-DartifactId='training-playground-java-app'"
		}
	}
    }
}
